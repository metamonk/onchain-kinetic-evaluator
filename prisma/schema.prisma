// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator zod {
  provider              = "zod-prisma"
  output                = "./zod"
  relationModel         = true
  modelCase             = "camelCase"
  modelSuffix           = "Schema"
  useDecimalJs          = true
  prismaJsonNullability = true
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String          @id @default(cuid())
  privyId        String          @unique
  walletAddress  String          @unique
  isAdmin        Boolean         @default(false)
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  trackedWallets TrackedWallet[]
}

model TrackedWallet {
  id           String        @id @default(cuid())
  address      String
  label        String?
  createdBy    User          @relation(fields: [userId], references: [id])
  userId       String
  transactions Transaction[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  chain        Chain

  @@unique([address])
}

model Transaction {
  id        String        @id @default(cuid())
  signature String        @unique
  from      String // Address of the sender
  to        String // Address of the receiver
  wallet    TrackedWallet @relation(fields: [walletId], references: [id])
  walletId  String
  timestamp DateTime
  type      String
  amount    Float?
  token     String?
  status    String
  raw       Json
  chain     Chain
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt

  @@index([signature])
}

enum Chain {
  SOL
  EVM
}
