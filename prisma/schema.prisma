// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator zod {
  provider              = "zod-prisma"
  output                = "./zod"
  relationModel         = true
  modelCase             = "camelCase"
  modelSuffix           = "Schema"
  useDecimalJs          = true
  prismaJsonNullability = true
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Chain {
  SOL
  EVM
}

enum TransactionType {
  TRANSFER
  TOKEN_TRANSFER
  SWAP
  CONTRACT_CALL
  OTHER
}

enum TransactionStatus {
  SUCCESS
  FAILED
  PENDING
}

model User {
  id             String          @id @default(cuid())
  privyId        String          @unique
  walletAddress  String          @unique
  isAdmin        Boolean         @default(false)
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  createdWallets TrackedWallet[] @relation("UserCreatedWallets") // Renamed and explicitly linked
}

model TrackedWallet {
  id           String        @id @default(cuid())
  address      String
  label        String
  createdBy    User          @relation("UserCreatedWallets", fields: [userId], references: [id])
  userId       String
  chain        Chain
  transactions Transaction[] @relation("WalletTransactions")
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt

  @@unique([address, chain]) // Unique per chain
  @@index([address])
}

model Transaction {
  id           String            @id @default(cuid())
  hash         String            @unique
  chain        Chain
  from         String
  to           String?
  wallets      TrackedWallet[]   @relation("WalletTransactions")
  blockTime    BigInt
  blockNumber  BigInt
  fee          BigInt?
  type         TransactionType
  status       TransactionStatus
  value        String?
  tokenAmount  Float?
  tokenAddress String?
  createdAt    DateTime          @default(now())
  updatedAt    DateTime          @updatedAt

  @@index([hash])
  @@index([blockTime])
  @@index([blockNumber])
}
